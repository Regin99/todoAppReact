{"ast":null,"code":"var _jsxFileName = \"D:\\\\react app\\\\todo-app\\\\src\\\\components\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoItem = props => {\n  _s();\n\n  const [flag, setFlag] = useState(props.flag);\n  const styles = [\"todoItem\"];\n  props.flag ? styles.push(\"completed\") : styles.push(\" \");\n\n  function toggleChecked() {\n    setFlag(!flag);\n    props.onChangeFlag(!flag, props.index);\n  }\n\n  function deleteTodo(event) {\n    event.preventDefault();\n    props.onDeleteTodo(props.index);\n  }\n\n  const bool = flag ? \"checked\" : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.join(\" \"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: props.index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: bool,\n        onChange: toggleChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: props.todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteTodo,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"PXjvaSxI5qvo1qCom7uc5l0b0V0=\");\n\n_c = TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["D:/react app/todo-app/src/components/TodoItem.js"],"names":["React","useState","TodoItem","props","flag","setFlag","styles","push","toggleChecked","onChangeFlag","index","deleteTodo","event","preventDefault","onDeleteTodo","bool","join","todo","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACE,KAAK,CAACC,IAAP,CAAhC;AACA,QAAME,MAAM,GAAG,CAAC,UAAD,CAAf;AAEAH,EAAAA,KAAK,CAACC,IAAN,GAAaE,MAAM,CAACC,IAAP,CAAY,WAAZ,CAAb,GAAwCD,MAAM,CAACC,IAAP,CAAY,GAAZ,CAAxC;;AAEA,WAASC,aAAT,GAAyB;AACvBH,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAD,IAAAA,KAAK,CAACM,YAAN,CAAmB,CAACL,IAApB,EAA0BD,KAAK,CAACO,KAAhC;AACD;;AAED,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,KAAK,CAACW,YAAN,CAAmBX,KAAK,CAACO,KAAzB;AACD;;AACD,QAAMK,IAAI,GAAGX,IAAI,GAAG,SAAH,GAAe,EAAhC;AACA,sBACE;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACU,IAAP,CAAY,GAAZ,CAAhB;AAAA,4BACE;AAAA,8BACE;AAAA,kBAASb,KAAK,CAACO,KAAN,GAAc;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEK,IAAhC;AAAsC,QAAA,QAAQ,EAAEP;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,gBAAKL,KAAK,CAACc,IAAN,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,OAAO,EAAEP,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1BM;;GAAMT,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../index.css\";\r\n\r\nexport const TodoItem = (props) => {\r\n  const [flag, setFlag] = useState(props.flag);\r\n  const styles = [\"todoItem\"];\r\n\r\n  props.flag ? styles.push(\"completed\") : styles.push(\" \");\r\n\r\n  function toggleChecked() {\r\n    setFlag(!flag);\r\n    props.onChangeFlag(!flag, props.index);\r\n  }\r\n\r\n  function deleteTodo(event) {\r\n    event.preventDefault();\r\n    props.onDeleteTodo(props.index);\r\n  }\r\n  const bool = flag ? \"checked\" : \"\";\r\n  return (\r\n    <div className={styles.join(\" \")}>\r\n      <div>\r\n        <strong>{props.index + 1}</strong>\r\n        <input type=\"checkbox\" checked={bool} onChange={toggleChecked} />\r\n      </div>\r\n      <li>{props.todo.text}</li>\r\n      <button onClick={deleteTodo}>X</button>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}